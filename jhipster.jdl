application {
  config {
    baseName image_ai
    applicationType monolith
    authenticationType jwt
    buildTool maven
    cacheProvider ehcache
    clientFramework react
    clientPackageManager npm
    clientTheme litera
    clientThemeVariant primary
    databaseType sql
    devDatabaseType h2Disk
    dtoSuffix DTO
    enableHibernateCache true
    enableTranslation true
    jhiPrefix bpf
    languages [en, de, ru]
    messageBroker false
    nativeLanguage en
    packageName com.image_ai
    prodDatabaseType mysql
    reactive false
    searchEngine false
    serverPort 8080
    skipClient false
    skipServer false
    skipUserManagement false
    websocket spring-websocket
    testFrameworks [cypress]
  }
  entities *
}

deployment {
  deploymentType docker-compose
  dockerRepositoryName "adehaoui"
}

entity UserDetails {
  balance Integer required min(0)
}
entity Model {
  name String required
    version String required
    feePerSecond Float required min(0)
    displayName String required
}
entity History {
  imageSource String required
    imageDestination String
    duration Integer
}
entity Status {
  name String required
}
relationship OneToOne {
  UserDetails{user(login) required} to User
}
relationship ManyToOne{
  History{user(login) required} to User
  History{model} to Model
}

relationship OneToMany {
    Status to History{status}
}

service * with serviceImpl
dto * with mapstruct
